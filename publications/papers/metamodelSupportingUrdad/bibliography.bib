
@inproceedings{iacob_model-driven_2008,
	address = {Munich, Germany},
	title = {A {Model-Driven} Perspective on the {Rule-Based} Specification of Services},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/EDOC.2008.24},
	abstract = {The focus in this position paper is on business rules as a means to raise the level of abstraction (and automation) at which business logic is incorporated in model driven application design in the context of service oriented architectures. More specifically, next to providing a classification framework for business rules and investigating the existing standards and languages for the formal specification of business rules, we propose a model-driven framework for the rule-based design of services. We provide an example to illustrate this framework and to demonstrate the role business rules can play in the context of {MDD} of {SOAs.} Furthermore, we also explore, in terms of existing tool support, the extent to which, the model-driven design process can be complemented and combined with business rules written in nearly natural language, which can become, at the platform specific level, an executable way to specify business knowledge and decisions.}},
	booktitle = {2008 12th International {IEEE} Enterprise Distributed Object Computing Conference},
	author = {{Maria-Eugenia} Iacob and Henk Jonkers},
	month = sep,
	year = {2008},
	pages = {75--84},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Discuss Business rules to service specification \&amp; orchestration mapping onto {BPEL} process spec via {MDA} =\&gt; production rules for business rules{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Refer to {OMG} {SBVR} {(Semantics} for Business Vocabulary and Rules){\textless}/p{\textgreater}
{\textless}p{\textgreater}- Contains "handle claim" example - compare to {URDAD} model for that example{\textless}/p{\textgreater}}
},

@inproceedings{choi_quality_2008,
	address = {Washington, {DC,} {USA}},
	title = {A Quality Model for Evaluating Reusability of Services in {SOA}},
	isbn = {978-0-7695-3340-7},
	doi = {http://0-dx.doi.org.innopac.up.ac.za/10.1109/CECandEEE.2008.134},
	booktitle = {{CECANDEEE} '08: Proceedings of the 2008 10th {IEEE} Conference on {E-Commerce} Technology and the Fifth {IEEE} Conference on Enterprise Computing, {E-Commerce} and {E-Services}},
	publisher = {{IEEE} Computer Society},
	author = {Si Won Choi and Soo Dong Kim},
	year = {2008},
	pages = {293–298}
},

@inproceedings{orriens_rule_2006,
	title = {A Rule Driven Approach for Developing Adaptive Service Oriented Business Collaboration},
	doi = {10.1109/SCC.2006.14},
	abstract = {Current composite Web service development and management solutions, e.g. {BPEL,} do not cater for flexible and adaptive business collaborations due to their pre-defined and inflexible nature that precludes them accommodating business dynamics. In this paper we propose a rule driven approach for adaptive business collaboration development in which rules drive and govern the development process. We firstly introduce the business collaboration context framework {(BCCF),} which provides enterprises with the context required for business collaboration. We then explain our model driven approach with which enterprises can capture this context in business collaboration models. Subsequently we demonstrate how we utilize rules to drive the development and management of such models, as such facilitating flexible and adaptive business collaboration},
	booktitle = {Services Computing, 2006. {SCC} '06. {IEEE} International Conference on},
	author = {B. Orriens and Jian Yang},
	month = sep,
	year = {2006},
	keywords = {adaptive, approach;business, business, collaboration, collaboration;business, context, data, development;adaptive, driven, framework;rule, oriented, processing;groupware;, service},
	pages = {182 --189}
},

@inproceedings{hemingway_semantic_2007,
	address = {Beijing, China},
	title = {A Semantic Anchoring Infrastructure for the Design of Embedded Systems},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/COMPSAC.2007.39},
	booktitle = {31st Annual International Computer Software and Applications Conference - Vol. 1- {(COMPSAC} 2007)},
	author = {Graham Hemingway and Hang Su and Kai Chen and T. John Koo},
	month = jul,
	year = {2007},
	pages = {287--294},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- {MDD} for embedded systems using semantic technologies{\textless}/p{\textgreater}
{\textless}p{\textgreater}- {DSMLs} (domain specific modeling languages)  are commonly used for embedded systems development, provided by a wide range of prodicts.{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Discuss semantic anchoring to facilitate mapping between {DSLs{\textless}/p{\textgreater}}}
},

@inproceedings{lange_empirical_2004,
	title = {An Empirical Assessment of Completeness in {UML} Design},
	booktitle = {Proceedings of {EASE} – International Conference on Empirical Assessment in Software Engineering},
	publisher = {nstitution of Electrical Engineers {(IEE)} Press},
	author = {Christian {F.J.} Lange and Michel {R.V.} Chaudron},
	year = {2004},
	pages = {111–121}
},

@inproceedings{alsharif_assessing_2004,
	address = {New York, {NY,} {USA}},
	title = {Assessing the complexity of software architecture},
	isbn = {1-58113-870-9},
	location = {Huntsville, Alabama},
	doi = {http://0-doi.acm.org.innopac.up.ac.za/10.1145/986537.986562},
	booktitle = {{ACM-SE} 42: Proceedings of the 42nd annual Southeast regional conference},
	publisher = {{ACM}},
	author = {Mohsen {AlSharif} and Walter P. Bond and Turky {Al-Otaiby}},
	year = {2004},
	pages = {98–103}
},

@inproceedings{klopper_assessment_2007,
	address = {Port Elizabeth, South Africa},
	title = {Assessment of a framework to compare software development methodologies},
	isbn = {978-1-59593-775-9},
	url = {http://0-portal.acm.org.innopac.up.ac.za/citation.cfm?id=1292491.1292498&coll=Portal&dl=GUIDE&CFID=100152126&CFTOKEN=72546997},
	abstract = {A decision-supporting framework was applied in a pilot study to assist in the decision making about what software development methodology to use at a software engineering company. This paper critically assesses this decision making process and framework that was used at that company to decide on an appropriate software methodology for the analysis and design of business processes and software systems.},
	booktitle = {Proceedings of the 2007 annual research conference of the South African institute of computer scientists and information technologists on {IT} research in developing countries},
	publisher = {{ACM}},
	author = {Riaan Klopper and Stefan Gruner and Derrick G. Kourie},
	year = {2007},
	keywords = {aris, business process analysis and design, mda, rup, software development methodology, uml, {URDAD}},
	pages = {56--65}
},

@inproceedings{carnevali_automatic_2009,
	address = {Paris, France},
	title = {Automatic Code Generation from {Real-Time} Systems Specifications},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/RSP.2009.24},
	booktitle = {2009 {IEEE/IFIP} International Symposium on Rapid System Prototyping},
	author = {Laura Carnevali and Dario {D'Amico} and Lorenzo Ridi and Enrico Vicario},
	month = jun,
	year = {2009},
	pages = {102--105}
},

@article{henderson-sellers_bridging_2011,
	title = {Bridging metamodels and ontologies in software engineering},
	volume = {84},
	issn = {0164-1212},
	url = {http://www.sciencedirect.com/science/article/B6V0N-51BBKS4-1/2/989f8e7fe2f490d4278feeb87f08f773},
	doi = {10.1016/j.jss.2010.10.025},
	abstract = {Over the last several years, metamodels and ontologies have been developed in parallel isolation. Ontological thinking, largely from the research field of artificial intelligence, has been increasingly investigated by software engineering researchers, more familiar with the idea of a metamodel. Here, we investigate the literature on both metamodelling and ontologies in order to identify ways in which they can be made compatible and linked in such a way as to benefit both communities and create a contribution to a coherent underpinning theory for software engineering. Analysis of a large number of theoretical and semi-theoretical approaches using as a framework a multi-level modelling construct identifies strengths, weaknesses, incompatibilities and inconsistencies within the extant literature. A metamodel deals with conceptual definitions while an ontology deals with real-world descriptors of business entities and is thus better named "domain ontology". A specific kind of ontology (foundational or high-level) provides "metalevel" concepts for the domain ontologies. In other words, a foundational ontology may be used at the same abstraction level as a metamodel and a domain ontology at the same abstraction level as a (design) model, with each pair linked via an appropriate semantic mapping.},
	number = {2},
	journal = {Journal of Systems and Software},
	author = {B. {Henderson-Sellers}},
	month = feb,
	year = {2011},
	keywords = {metamodel, Metamodel, Ontologies, Ontology, {OWL,} Software engineering},
	pages = {301--313}
},

@inproceedings{asnina_computation_2010,
	address = {Athens, Greece},
	title = {Computation Independent Models: Bridging Problem and Solution Domains},
	url = {http://www.enase.org/Abstracts/2010/ENASE_2010_Abstracts.htm},
	abstract = {Compliance between a problem and a solution domain(s) is a well-known issue in software development. A usual way of development is focusing on the solution, and adapting the solution to the problem domain only in case of occurred issues. Sometimes, the cost of such adaptation is very high, and then the cheapest way is to change operation of the problem domain. Certainly, such ways cannot satisfy a client. This paper considers a computation independent model as a place where overcoming of the gap must occur. It discusses ways for overcoming a gap between a problem domain and a solution domain(s) that are proposed within {CIMs,} and suggests a mathematical mechanism, continuous mapping, provided by a topological functioning model together with its other topological and functional properties as a formal bridge between those domains. This mechanism is explained by an example.},
	author = {Erika Asnina and Janis Osis},
	year = {2010}
},

@incollection{heidenreich_derivation_2009,
	series = {Lecture Notes in Computer Science},
	title = {Derivation and Refinement of Textual Syntax for Models},
	volume = {5562},
	url = {http://dx.doi.org/10.1007/978-3-642-02674-4_9},
	abstract = {Textual Syntax {(TS)} as a form of model representation has made its way to the {Model-Driven} Software Development community and is considered a viable alternative to graphical representations. To support the design and implementation of text editing facilities many concrete syntax and model mapping tools have emerged. Despite the maturity of these tools, users still spend considerable effort to specify syntaxes and generate editors even for simple metamodels. To reduce this effort, we propose to refine a specification that is automatically derived from a given metamodel. We argue that defaults in a customisable setting enable developers to quickly realise text-based editors for models. In particular in settings where metamodels evolve, such a procedure is beneficial. To evaluate this idea we present {EMFText} [1], an {EMF/Eclipse} integrated tool for agile Textual Syntax {(TS)} development. We show how default syntax can easily be tailored and refined to obtain a custom text editor for {EMF} models and demonstrate our approach by two examples.},
	booktitle = {Model Driven Architecture - Foundations and Applications},
	publisher = {Springer Berlin / Heidelberg},
	author = {Florian Heidenreich and Jendrik Johannes and Sven Karol and Mirko Seifert and Christian Wende},
	editor = {Richard Paige and Alan Hartman and Arend Rensink},
	year = {2009},
	note = {10.1007/978-3-642-02674-4\_9},
	pages = {114--129}
},

@article{dick_design_2005,
	title = {Design traceability},
	volume = {22},
	issn = {0740-7459},
	doi = {10.1109/MS.2005.150},
	abstract = {Traceability is about documenting the relationships between layers of information, for instance, between system requirements and software design. Many software development tools manage design relationships, for instance, between modeling elements (such as classes) and source code, or between tasks and source code files. Whatever development scale we engage in, we systematically apply information traceability. It's a vehicle for thinking about the way the software meets its requirements; it captures design rationale to help others understand and review; and it gives us far greater confidence in managing future changes.},
	number = {6},
	journal = {Software, {IEEE}},
	author = {Jeremy Dick},
	month = nov,
	year = {2005},
	keywords = {formal specification, formal verification, information traceability, software design, software development tools, source code, system requirements engineering, systems analysis design traceability},
	pages = {14–16},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- emphasizes need for traceability across levels of granularity{\textless}/p{\textgreater}
{\textless}p{\textgreater}- traceability generally important in design (not only software){\textless}/p{\textgreater}
{\textless}p{\textgreater}- traceability links can be enriched through rationale sematics {(URDAD:} {requiredBy,} {requiredService,} ...){\textless}/p{\textgreater}
{\textless}p{\textgreater}- include sufficiency and necessity, i.e. are all requirements met and are all design elements necessary/required to realize requirements{\textless}/p{\textgreater}
{\textless}p{\textgreater}- identify immediate impact point, calculate potential impact tree, prune impact tree{\textless}/p{\textgreater}}
},

@misc{__????
},

@inproceedings{feuerlicht_determinants_2007,
	address = {Amsterdam, The Netherlands, The Netherlands},
	title = {Determinants of Service Reusability},
	isbn = {978-1-58603-794-9},
	booktitle = {Proceeding of the 2007 conference on New Trends in Software Methodologies, Tools and Techniques},
	publisher = {{IOS} Press},
	author = {George Feuerlicht and Amalka Wijayaweera},
	year = {2007},
	pages = {467–474}
},

@inproceedings{mohagheghi_evaluating_2007,
	address = {Washington, {DC,} {USA}},
	title = {Evaluating Quality in {Model-Driven} Engineering},
	isbn = {0-7695-2953-4},
	doi = {http://dx.doi.org/10.1109/MISE.2007.6},
	booktitle = {{MISE} '07: Proceedings of the International Workshop on Modeling in Software Engineering},
	publisher = {{IEEE} Computer Society},
	author = {Parastoo Mohagheghi and Jan Aagedal},
	year = {2007},
	pages = {6}
},

@inproceedings{ziadi_requirements_2009,
	title = {From Requirements to Code Revisited},
	doi = {10.1109/ISORC.2009.29},
	abstract = {In this article paper entitled {"From} {Play-In} Scenarios to Code: An Achievable {Dream",David} Harel presented a development schema that makes it possible to go from high-level user-friendly requirements to a full system model, and from there to the final implementation. Even if Harel's schema represents a real contribution to filing the gap between user requirements and final implementations, there is few work on its feasibility and none within {UML2.This} paper addresses this lack. First we use {UML2} sequence diagram as a formalism for requirement specification. Then an approach that synthesizes state machines from {UML2} sequence diagrams is presented. From the obtained state machines, we implement a transformation to code. The {AIBO} platform (one of several typesof robotic pets designed and manufactured by Sony) is used as a case study toillustrate our implementation.},
	booktitle = {{Object/Component/Service-Oriented} {Real-Time} Distributed Computing, 2009. {ISORC} '09. {IEEE} International Symposium on},
	author = {T. Ziadi and X. Blanc and A. Raji},
	month = mar,
	year = {2009},
	keywords = {2, diagram;code, Language;formal, machine, modeling, requirement;requirement, sequence, specification;, specification;state, {synthesis;Unified,} transformation;high-level, {UML,} user-friendly},
	pages = {228 --235}
},

@article{cabot_uml/ocl_2010,
	title = {From {UML/OCL} to {SBVR} specifications: A challenging transformation},
	volume = {35},
	issn = {0306-4379},
	url = {http://www.sciencedirect.com/science/article/B6V0G-4VGPWPR-1/2/76e114cfb3a4528c896bfb206081300f},
	doi = {DOI: 10.1016/j.is.2008.12.002},
	number = {4},
	journal = {Information Systems},
	author = {Jordi Cabot and Raquel Pau and Ruth Raventós},
	year = {2010},
	note = {Vocabularies, Ontologies and Rules for Enterprise and Business Process Modeling and Management},
	keywords = {Model, ocl, {SBVR,} transformation, {UML}},
	pages = {417 -- 440}
},

@article{lange_improving_2006,
	title = {Improving the Quality of {UML} Models in Practice},
	volume = {??},
	number = {??},
	journal = {{ICSE'06}},
	author = {Christian {F.J.} Lange},
	year = {2006},
	pages = {993–996}
},

@article{lange_practice:_2006,
	title = {In practice: {UML} software architecture and design description},
	volume = {23},
	issn = {0740-7459},
	doi = {10.1109/MS.2006.50},
	abstract = {The Unified Modeling Language has attracted many organizations and practitioners. {UML} is now the de facto modeling language for software development. Several features account for its popularity: it's a standardized notation, rich in expressivity; {UML} 2.0 provides 13 diagram types that enable modeling several different views and abstraction levels. Furthermore, {UML} supports domain-specific extensions using stereotypes and tagged values. Finally, several case tools integrate {UML} modeling with other tasks such as generating code and reverse-engineering models from code. Our study focused on {UML} use and model quality in actual projects rather than on its adequacy as a notation or language.},
	number = {2},
	journal = {Software, {IEEE}},
	author = {{C.F.J.} Lange and {M.R.V.} Chaudron and J. Muskens},
	month = apr,
	year = {2006},
	keywords = {domain-specific modelling, formal specification, software architecture, software design description, software development, software metrics {UML,} Unified Modeling Language},
	pages = {40–46}
},

@inproceedings{muskens_investigations_2004,
	title = {Investigations in applying metrics to multi-view architecture models},
	doi = {10.1109/EURMIC.2004.1333392},
	abstract = {The goal of our research is to develop industry-proof software architecture and design metrics. We identify a number of problems that arise in computing software architecture and design metrics in industrial settings that were not encountered in computing source-code metrics. These problems include the absence of a single, unifying representation for architectures and they arise from the fact that architecture diagrams are used in an informal manner. We describe our approach towards defining metrics for architectures and designs which are represented in the 4+1 views paradigm using {UML.} We report our experiences with architectural metrics in industrial settings.},
	booktitle = {Euromicro Conference, 2004. Proceedings. 30th},
	author = {J. Muskens and M. Chaudron and C. Lange},
	month = aug,
	year = {2004},
	keywords = {industrial settings, industry-proof software architecture, object-oriented programming, software architecture, software development management, software metrics {UML} design pattern, source-code metrics, Unified Modeling Language},
	pages = {372–379}
},

@article{mattsson_linking_2009,
	title = {Linking {Model-Driven} Development and Software Architecture: A Case Study},
	volume = {35},
	issn = {0098-5589},
	shorttitle = {Linking {Model-Driven} Development and Software Architecture},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/TSE.2008.87},
	number = {1},
	journal = {{IEEE} Transactions on Software Engineering},
	author = {Anders Mattsson and Björn Lundell and Brian Lings and Brian Fitzgerald},
	month = jan,
	year = {2009},
	keywords = {Architecture, formal methods, {MDD}},
	pages = {83--93},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Critically looks at {MDD} case study, identifying shot-comings of {MDD} approach used in that study{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Conclude that it is important to formalize architectural design rules.{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Highlight time-consuming error-prone manual practices required to keep system consistent with its "architecture".{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Nice summary statement of {MDD:} {"A} basic premise of {MDD} is to capture all important design information in a set of formal or semi-formal models ..."{\textless}/p{\textgreater}}
},

@inproceedings{mayer_mdd4soa:_2008,
	address = {Munich, Germany},
	title = {{MDD4SOA:} {Model-Driven} Service Orchestration},
	shorttitle = {{MDD4SOA}},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/EDOC.2008.55},
	booktitle = {2008 12th International {IEEE} Enterprise Distributed Object Computing Conference},
	author = {Philip Mayer and Andreas Schroeder and Nora Koch},
	year = {2008},
	keywords = {{MDD,} Service Orchestration, soa},
	pages = {203--212},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Specify {UML} extension for modeling service orchestration{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Useful to compare to {URDAD.{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Claim that modeling for {SOA} still weak.{\textless}/p{\textgreater}}
},

@article{booch_measuring_2008,
	title = {Measuring Architectural Complexity},
	volume = {25},
	issn = {0740-7459},
	doi = {http://0-dx.doi.org.innopac.up.ac.za/10.1109/MS.2008.91},
	number = {4},
	journal = {{IEEE} Softw.},
	author = {Grady Booch},
	year = {2008},
	pages = {14–15}
},

@article{salasin_metrics_2007,
	title = {Metrics For {Service-Oriented} Architecture {(SOA)} Systems: What Developers Should Know},
	volume = {11},
	issn = {1092-0617},
	number = {2},
	journal = {J. Integr. Des. Process Sci.},
	author = {John Salasin and Azad M. Madni},
	year = {2007},
	pages = {55–71}
},

@inproceedings{cardei_model_2008,
	title = {Model Based Requirements Specification and Validation for Component Architectures},
	doi = {10.1109/SYSTEMS.2008.4519001},
	abstract = {Requirements specification is a major component of the system development cycle. Mistakes and omissions in requirements documents lead to ambiguous or wrong interpretation by engineers and, in turn, cause errors that trickle down in design and implementation with consequences on the overall development cost. In this paper we describe a methodology for requirements specification that aims to alleviate the above issues and that produces models for functional requirements that can be automatically validated for completeness and consistency. This methodology is part of the Requirements Driven Design Automation framework {(RDDA)} that we develop for component-based system development. The {RDDA} framework uses an ontology-based language for semantic description of functional product requirements, {UM-} {L/SysML} structure diagrams, component constraints, and Quality of Service. The front end method for requirements specification is the {SysML} editor in Rhapsody. A requirements model in {OWL} is converted from {SysML} {XMI} representation. The specification is validated for completeness and consistency with a ruled-based system implemented in Prolog. With our methodology, omissions and several types of consistency errors present in the requirements specification are detected early on, before the design stage.},
	booktitle = {Systems Conference, 2008 2nd Annual {IEEE}},
	author = {I. Cardei and M. Fonoage and R. Shankar},
	month = apr,
	year = {2008},
	keywords = {component architectures, component-based system development, formal specification, functional requirements, knowledge based systems, model based requirements specification, model based requirements validation, object-oriented programming, ontologies (artificial intelligence), ontology-based language, Prolog, quality of service, requirements driven design automation, ruled-based system, {SysML} {XMI} representation, system development cycle, systems {analysisOWL,} {UML/SysML} structure diagrams, Unified Modeling Language},
	pages = {1–8}
},

@article{aizenbud-reshef_model_2006,
	title = {Model traceability},
	volume = {45},
	number = {3},
	journal = {{IBM} Systems Journal},
	author = {Netta {Aizenbud-Reshef} and Brian T. Nolan and Julia Rubin and Yael {Shaham-Garifi}},
	year = {2006},
	pages = {515–526}
},

@inproceedings{wang_ontology_2006,
	address = {Nanjing, China},
	title = {Ontology Definition Metamodel based Consistency Checking of {UML} Models},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/CSCWD.2006.253005},
	booktitle = {2006 10th International Conference on Computer Supported Cooperative Work in Design},
	author = {Shengjun Wang and Longfei Jin and Chengzhi Jin},
	year = {2006},
	keywords = {consistency checking, model verification, {MOF,} ontology-based language, {OWL,} {UML}},
	pages = {1--5},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Tranform {UML} to {OWL} models and use logical reasoning for consistency checking.{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Nice diagram showing {UML} vs {DSL} based {MDA{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Stress that {UML} models often inconsistent and incomplete. Hence claim that management of both, syntactic and semantic consistency is key for {UML} modeling.{\textless}/p{\textgreater}}
},

@article{noguera_ontology-driven_2010,
	title = {Ontology-driven analysis of {UML-based} collaborative processes using {OWL-DL} and {CPN}},
	volume = {75},
	issn = {0167-6423},
	url = {http://www.sciencedirect.com/science/article/B6V17-4WCTWKF-1/2/22638ab2bb91e6a005c3a2406edd8c89},
	doi = {10.1016/j.scico.2009.05.002},
	abstract = {A key ingredient in system and organization modeling is modeling business processes that involve the collaborative participation of different teams within and outside the organization. Recently, the use of the Unified Modeling Language {(UML)} for collaborative business modeling has been increasing, thanks to its human-friendly visual representation of a rich set of structural and behavioral views, albeit its unclear semantics. In the meantime, the use of the Web Ontology Language {(OWL)} has also been emerging, thanks to its clearly-defined semantics, hence being amenable to automatic analysis and reasoning, although it is less human friendly than, and also perhaps not as rich as, the {UML} notation -- especially concerning processes, or activities. In this paper, we view the {UML} and the {OWL} as being complementary to each other, and exploit their relative strengths. We provide a mapping between the two, through a set of mapping rules, which allow for the capture of {UML} activity diagrams in an {OWL-ontology.} This mapping, which results in a formalization of collaborative processes, also sets a basis for subsequent construction of executable models using the Colored Petri Nets {(CPN)} formalism. For this purpose, we also provide appropriate mappings from {OWL-based} ontological elements into {CPN} elements. A case study of a mortgage granting system is described, along with the potential benefits and limitations of our proposal.},
	number = {8},
	journal = {Science of Computer Programming},
	author = {Manuel Noguera and María V. Hurtado and María Luisa Rodríguez and Lawrence Chung and José Luis Garrido},
	month = aug,
	year = {2010},
	keywords = {Collaborative systems, {CPN,} {CSCW,} {OWL,} Process analysis, Process modelling, Reasoning, Task modelling},
	pages = {726--760}
},

@article{horrocks_reducing_2004,
	title = {Reducing {OWL} entailment to description logic satisfiability},
	volume = {1},
	issn = {1570-8268},
	url = {http://www.sciencedirect.com/science/article/B758F-4D1V7XT-2/2/5dbe34a780e5fe689b4827a674e802fb},
	doi = {10.1016/j.websem.2004.06.003},
	abstract = {We show how to reduce ontology entailment for the {OWL} {DL} and {OWL} Lite ontology languages to knowledge base satisfiability in (respectively) the and description logics. This is done by first establishing a correspondence between {OWL} ontologies and description logic knowledge bases and then by showing how knowledge base entailment can be reduced to knowledge base satisfiability.},
	number = {4},
	journal = {Web Semantics: Science, Services and Agents on the World Wide Web},
	author = {Ian Horrocks and Peter {Patel-Schneider}},
	month = oct,
	year = {2004},
	keywords = {Architecture, Description Logic, Knowledge, {OWL,} {OWL} Lite, {OWL-DL}},
	pages = {345--357}
},

@inproceedings{jinhong_zhao_research_2008,
	address = {Beijing, China},
	title = {Research and design of an executable modeling language based on {MOF}},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/CAIDCD.2008.4730597},
	booktitle = {2008 9th International Conference on {Computer-Aided} Industrial Design and Conceptual Design},
	author = {Jinhong Zhao and Shufen Liu and Xianyan Wang and Liang Chen and Chuyi Wei},
	year = {2008},
	keywords = {executable modeling language, metamodel, ocl},
	pages = {399--404}
},

@inproceedings{mu_specification_2010,
	address = {New York, {NY,} {USA}},
	series = {{ECSA} '10},
	title = {Specification of modelling languages in a flexible meta-model architecture},
	isbn = {978-1-4503-0179-4},
	location = {Copenhagen, Denmark},
	url = {http://0-doi.acm.org.innopac.up.ac.za/10.1145/1842752.1842807},
	doi = {http://0-doi.acm.org.innopac.up.ac.za/10.1145/1842752.1842807},
	abstract = {Originally, meta-models were used to specify the structure (abstract syntax) of modelling languages. This is reflected both in meta-languages like {MOF} and Ecore, and the four-layer meta-model architecture. Presently, meta-modelling is used for specification of complete languages. In this situation, it turns out that the traditional meta-languages are not always expressive enough to capture all language aspects. This usually implies the use of more than one metalanguage in the meta-model architecture to cover the different language aspects. There are many approaches to address this challenge. In this paper, we analyze these approaches, and based on this analysis, we re-think the meta-model architecture focusing on complete language specifications. In our meta-model architecture, each aspect of a language conforms to an aspect-specific meta-language at the level above, and models can reside at different levels depending on their context and use. This meta-model architecture is easier to understand, more flexible and more extensible; therefore it may be useful in the design of meta-model-based language specification platforms, as well as for promoting the understanding of the principles of meta-modelling.},
	booktitle = {Proceedings of the Fourth European Conference on Software Architecture: Companion Volume},
	publisher = {{ACM}},
	author = {Liping Mu and Terje Gj{\textbackslash}osæter and Andreas Prinz and Merete Skjelten Tveit},
	year = {2010},
	keywords = {{MDA,} meta-model architecture},
	pages = {302–308}
},

@inproceedings{solms_technology_2007,
	address = {Amsterdam, The Netherlands, The Netherlands},
	title = {Technology Neutral Business Process Design using {URDAD}},
	isbn = {978-1-58603-794-9},
	booktitle = {Proceeding of the 2007 conference on New Trends in Software Methodologies, Tools and Techniques},
	publisher = {{IOS} Press},
	author = {Fritz Solms},
	year = {2007},
	pages = {52–70}
},

@inproceedings{samir_towards_2010,
	address = {Athens, Greece},
	title = {Towards a Structure for the Computation Independent Model},
	url = {http://www.enase.org/Abstracts/2010/ENASE_2010_Abstracts.htm},
	abstract = {Model Driven Architecture {(MDA)} is composed of a hierarchy of three levels of models : computation independent model {(CIM),} platform independent model {(PIM)} and platform specific model {(PSM).} Currently, there exists no formal {CIM} definition describing its structure of elements to which transformation rules can be applied. It is therefore the goal of this paper to attempt such a structure. In our view, the {CIM} can be divided into a hierarchy of three interconnected models: the business motivation model {(BMM),} the business process model {(BPM),} and the requirements model {(RM).} This paper presents how these three models can account for the {CIM} and how they are related to each other.},
	author = {Kherraf Samir and Alexandre Moïse and Éric Lefebvre and Witold Suryn},
	year = {2010},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- discuss structure of {CIM:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}* {CIM} = {BMM} + {RM} + {BPM}  {(Computation} Independent Model = Business Motivational Model + Requirements Model + Business Process Model){\textless}/p{\textgreater}
{\textless}p{\textgreater}* {BMM} = business strategies \&amp; tactics, policies \&amp; rules, goals \&amp; objectives{\textless}/p{\textgreater}
{\textless}p{\textgreater}* {RM} = use case  actor + business rule{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Claim {CIM} transforms to {PIM,} but with what additional inputs?{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Separation of {CIM} and {PIM} at best vague. {PIM} seen as refinement of {CIM} adding interfaces and perhaps class diagrams. {PIM} usually seen as platform independent software model, but even {CIM} is said by {OMG} to "show system in environment in which it will operate"???{\textless}/p{\textgreater}
{\textless}p{\textgreater}- {OMG} Requirements for {CIM} - make only partial sense{\textless}/p{\textgreater}
{\textless}p{\textgreater} {\textless}/p{\textgreater}}
},

@inproceedings{gervais_towards_????,
	address = {Oxford, {UK}},
	title = {Towards an {MDA-oriented} methodology},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/CMPSAC.2002.1044561},
	booktitle = {Proceedings 26th Annual International Computer Software and Applications},
	author = {{M.P.} Gervais},
	keywords = {Design methodology, {MDA,} {ODAC,} {PIM} guidelines},
	pages = {265--270},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- defines {ODAC} methodology{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Defined view points{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Guidelines for {PIM{\textless}/p{\textgreater}}
{\textless}p{\textgreater} {\textless}/p{\textgreater}}
},

@article{hoffmann_towards_2009,
	title = {Towards the Integration of {UML-} and textual Use Case Modeling},
	volume = {8},
	issn = {1660-1769},
	url = {http://www.jot.fm/contents/issue_2009_05/article2.html},
	doi = {10.5381/jot.2009.8.3.a2},
	number = {3},
	journal = {Journal of Object Technology},
	author = {Veit Hoffmann and Horst Lichter and Alexander Nyßen and Andreas Walter},
	month = may,
	year = {2009},
	keywords = {Domain experts, {DSL,} {UML}},
	pages = {85--100},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Define separate metamodel for narrative use case description useful for business users (note this is not a textual syntax, but a separate metamodel){\textless}/p{\textgreater}
{\textless}p{\textgreater}- Define consistency checks between narrative and {UML} use case models.{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Relevant as reference for {URDAD} text {DSL} for domain experts.{\textless}/p{\textgreater}
{\textless}p{\textgreater} {\textless}/p{\textgreater}}
},

@inproceedings{osis_transforming_2010,
	address = {Athens, Greece},
	title = {Transforming Textual Use Cases to a Computation Independent Model},
	url = {http://www.enase.org/Abstracts/2010/ENASE_2010_Abstracts.htm},
	abstract = {This paper analyzes the specific text analysis tasks of transforming textual use cases of a business system to a Computation Independent Model {(CIM)} for Model Driven Architecture {(MDA).} By applying language processing methods to textual use case analysis and using Topological Functioning Model {(TFM)} as {CIM} a workable solution can be developed. Implementing a {TFM} Tool is considered to enable fetching a {TFM} from use cases, editing and verifying the {TFM,} and transforming {TFM} to Unified Modeling Language {(UML).} Solution’s compatibility to {MDA} standards is also considered, thus increasing the completeness of {MDA} and providing a formal method to automatically acquire a {CIM} from description of a business system in form of textual use cases.},
	author = {Janis Osis and Armands Šlihte},
	year = {2010}
},

@article{solms_urdad_2010,
	title = {{URDAD} as a semi-formal approach to analysis and design},
	volume = {6},
	issn = {1614-5046},
	url = {http://dx.doi.org/10.1007/s11334-009-0113-4},
	abstract = {The Use Case, Responsibility Driven Analysis and Design {(URDAD)} methodology is a methodology for technology neutral design generating the Platform Independent Model of the Object Management Group’s Model Driven Architecture. It requires the core modeling to be done in the problem space by domain specialists and not in the solution space by technology specialists. {URDAD} allows for formal elements to be added by different role players at different stages of the model refinement, whilst aiming to preserve agility of the outputs and low cost of the process generating the outputs. This paper discusses the semi-formal aspects of {URDAD} which facilitate model validation and testing, documentation generation and automated implementation mapping as well as aspects which promote agility and low cost.},
	journal = {Innovations in Systems and Software Engineering},
	author = {Fritz Solms and Dawid Loubser},
	year = {2010},
	note = {10.1007/s11334-009-0113-4},
	pages = {155--162}
},

@article{parreiras_using_2010,
	title = {Using ontologies with {UML} class-based modeling: The {TwoUse} approach},
	volume = {69},
	issn = {{0169-023X}},
	shorttitle = {Using ontologies with {UML} class-based modeling},
	url = {http://www.sciencedirect.com/science/article/B6TYX-50J4M6X-5/2/0af833bc0750a5efddf70c0696a4fe5c},
	doi = {10.1016/j.datak.2010.07.009},
	abstract = {{UML} class-based models and {OWL} ontologies constitute modeling approaches with different strengths and weaknesses that make them appropriate for specifying distinct aspects of software systems. We propose an integrated use of both modeling approaches in a coherent framework -- {TwoUse.} We present a framework involving different concrete syntaxes for developing integrated models and use a {SPARQL-like} approach for writing query operations. We illustrate {TwoUse's} applicability with a case study and conclude that {TwoUse} achieves enhancements of non-functional software requirements like maintainability, reusability and extensibility.},
	number = {11},
	journal = {Data \& Knowledge Engineering},
	author = {Fernando Silva Parreiras and Steffen Staab},
	month = nov,
	year = {2010},
	keywords = {{CASE} tools + {UML,} consistency checking, Ecore, Language definition, Manipulation, metamodel, Ontologies, {OWL,} {OWL-DL,} twouse},
	pages = {1194--1207}
}