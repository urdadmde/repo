
@inproceedings{iacob_model-driven_2008,
	address = {Munich, Germany},
	title = {A {Model-Driven} Perspective on the {Rule-Based} Specification of Services},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/EDOC.2008.24},
	abstract = {The focus in this position paper is on business rules as a means to raise the level of abstraction (and automation) at which business logic is incorporated in model driven application design in the context of service oriented architectures. More specifically, next to providing a classification framework for business rules and investigating the existing standards and languages for the formal specification of business rules, we propose a model-driven framework for the rule-based design of services. We provide an example to illustrate this framework and to demonstrate the role business rules can play in the context of {MDD} of {SOAs.} Furthermore, we also explore, in terms of existing tool support, the extent to which, the model-driven design process can be complemented and combined with business rules written in nearly natural language, which can become, at the platform specific level, an executable way to specify business knowledge and decisions.}},
	booktitle = {2008 12th International {IEEE} Enterprise Distributed Object Computing Conference},
	author = {{Maria-Eugenia} Iacob and Henk Jonkers},
	month = sep,
	year = {2008},
	pages = {75--84},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Discuss Business rules to service specification \&amp; orchestration mapping onto {BPEL} process spec via {MDA} =\&gt; production rules for business rules{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Refer to {OMG} {SBVR} {(Semantics} for Business Vocabulary and Rules){\textless}/p{\textgreater}
{\textless}p{\textgreater}- Contains "handle claim" example - compare to {URDAD} model for that example{\textless}/p{\textgreater}}
},

@inproceedings{hemingway_semantic_2007,
	address = {Beijing, China},
	title = {A Semantic Anchoring Infrastructure for the Design of Embedded Systems},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/COMPSAC.2007.39},
	booktitle = {31st Annual International Computer Software and Applications Conference - Vol. 1- {(COMPSAC} 2007)},
	author = {Graham Hemingway and Hang Su and Kai Chen and T. John Koo},
	month = jul,
	year = {2007},
	pages = {287--294},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- {MDD} for embedded systems using semantic technologies{\textless}/p{\textgreater}
{\textless}p{\textgreater}- {DSMLs} (domain specific modeling languages)  are commonly used for embedded systems development, provided by a wide range of prodicts.{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Discuss semantic anchoring to facilitate mapping between {DSLs{\textless}/p{\textgreater}}}
},

@inproceedings{klopper_assessment_2007,
	address = {Port Elizabeth, South Africa},
	title = {Assessment of a framework to compare software development methodologies},
	isbn = {978-1-59593-775-9},
	url = {http://0-portal.acm.org.innopac.up.ac.za/citation.cfm?id=1292491.1292498&coll=Portal&dl=GUIDE&CFID=100152126&CFTOKEN=72546997},
	abstract = {A decision-supporting framework was applied in a pilot study to assist in the decision making about what software development methodology to use at a software engineering company. This paper critically assesses this decision making process and framework that was used at that company to decide on an appropriate software methodology for the analysis and design of business processes and software systems.},
	booktitle = {Proceedings of the 2007 annual research conference of the South African institute of computer scientists and information technologists on {IT} research in developing countries},
	publisher = {{ACM}},
	author = {Riaan Klopper and Stefan Gruner and Derrick G. Kourie},
	year = {2007},
	keywords = {aris, business process analysis and design, mda, rup, software development methodology, uml, {URDAD}},
	pages = {56--65}
},

@inproceedings{carnevali_automatic_2009,
	address = {Paris, France},
	title = {Automatic Code Generation from {Real-Time} Systems Specifications},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/RSP.2009.24},
	booktitle = {2009 {IEEE/IFIP} International Symposium on Rapid System Prototyping},
	author = {Laura Carnevali and Dario {D'Amico} and Lorenzo Ridi and Enrico Vicario},
	month = jun,
	year = {2009},
	pages = {102--105}
},

@article{henderson-sellers_bridging_2011,
	title = {Bridging metamodels and ontologies in software engineering},
	volume = {84},
	issn = {0164-1212},
	url = {http://www.sciencedirect.com/science/article/B6V0N-51BBKS4-1/2/989f8e7fe2f490d4278feeb87f08f773},
	doi = {10.1016/j.jss.2010.10.025},
	abstract = {Over the last several years, metamodels and ontologies have been developed in parallel isolation. Ontological thinking, largely from the research field of artificial intelligence, has been increasingly investigated by software engineering researchers, more familiar with the idea of a metamodel. Here, we investigate the literature on both metamodelling and ontologies in order to identify ways in which they can be made compatible and linked in such a way as to benefit both communities and create a contribution to a coherent underpinning theory for software engineering. Analysis of a large number of theoretical and semi-theoretical approaches using as a framework a multi-level modelling construct identifies strengths, weaknesses, incompatibilities and inconsistencies within the extant literature. A metamodel deals with conceptual definitions while an ontology deals with real-world descriptors of business entities and is thus better named "domain ontology". A specific kind of ontology (foundational or high-level) provides "metalevel" concepts for the domain ontologies. In other words, a foundational ontology may be used at the same abstraction level as a metamodel and a domain ontology at the same abstraction level as a (design) model, with each pair linked via an appropriate semantic mapping.},
	number = {2},
	journal = {Journal of Systems and Software},
	author = {B. {Henderson-Sellers}},
	month = feb,
	year = {2011},
	keywords = {metamodel, Metamodel, Ontologies, Ontology, {OWL,} Software engineering},
	pages = {301--313}
},

@article{mattsson_linking_2009,
	title = {Linking {Model-Driven} Development and Software Architecture: A Case Study},
	volume = {35},
	issn = {0098-5589},
	shorttitle = {Linking {Model-Driven} Development and Software Architecture},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/TSE.2008.87},
	number = {1},
	journal = {{IEEE} Transactions on Software Engineering},
	author = {Anders Mattsson and Björn Lundell and Brian Lings and Brian Fitzgerald},
	month = jan,
	year = {2009},
	keywords = {Architecture, formal methods, {MDD}},
	pages = {83--93},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Critically looks at {MDD} case study, identifying shot-comings of {MDD} approach used in that study{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Conclude that it is important to formalize architectural design rules.{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Highlight time-consuming error-prone manual practices required to keep system consistent with its "architecture".{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Nice summary statement of {MDD:} {"A} basic premise of {MDD} is to capture all important design information in a set of formal or semi-formal models ..."{\textless}/p{\textgreater}}
},

@inproceedings{mayer_mdd4soa:_2008,
	address = {Munich, Germany},
	title = {{MDD4SOA:} {Model-Driven} Service Orchestration},
	shorttitle = {{MDD4SOA}},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/EDOC.2008.55},
	booktitle = {2008 12th International {IEEE} Enterprise Distributed Object Computing Conference},
	author = {Philip Mayer and Andreas Schroeder and Nora Koch},
	year = {2008},
	keywords = {{MDD,} Service Orchestration, soa},
	pages = {203--212},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Specify {UML} extension for modeling service orchestration{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Useful to compare to {URDAD.{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Claim that modeling for {SOA} still weak.{\textless}/p{\textgreater}}
},

@inproceedings{wang_ontology_2006,
	address = {Nanjing, China},
	title = {Ontology Definition Metamodel based Consistency Checking of {UML} Models},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/CSCWD.2006.253005},
	booktitle = {2006 10th International Conference on Computer Supported Cooperative Work in Design},
	author = {Shengjun Wang and Longfei Jin and Chengzhi Jin},
	year = {2006},
	keywords = {consistency checking, model verification, {MOF,} ontology-based language, {OWL,} {UML}},
	pages = {1--5},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Tranform {UML} to {OWL} models and use logical reasoning for consistency checking.{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Nice diagram showing {UML} vs {DSL} based {MDA{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Stress that {UML} models often inconsistent and incomplete. Hence claim that management of both, syntactic and semantic consistency is key for {UML} modeling.{\textless}/p{\textgreater}}
},

@article{noguera_ontology-driven_2010,
	title = {Ontology-driven analysis of {UML-based} collaborative processes using {OWL-DL} and {CPN}},
	volume = {75},
	issn = {0167-6423},
	url = {http://www.sciencedirect.com/science/article/B6V17-4WCTWKF-1/2/22638ab2bb91e6a005c3a2406edd8c89},
	doi = {10.1016/j.scico.2009.05.002},
	abstract = {A key ingredient in system and organization modeling is modeling business processes that involve the collaborative participation of different teams within and outside the organization. Recently, the use of the Unified Modeling Language {(UML)} for collaborative business modeling has been increasing, thanks to its human-friendly visual representation of a rich set of structural and behavioral views, albeit its unclear semantics. In the meantime, the use of the Web Ontology Language {(OWL)} has also been emerging, thanks to its clearly-defined semantics, hence being amenable to automatic analysis and reasoning, although it is less human friendly than, and also perhaps not as rich as, the {UML} notation -- especially concerning processes, or activities. In this paper, we view the {UML} and the {OWL} as being complementary to each other, and exploit their relative strengths. We provide a mapping between the two, through a set of mapping rules, which allow for the capture of {UML} activity diagrams in an {OWL-ontology.} This mapping, which results in a formalization of collaborative processes, also sets a basis for subsequent construction of executable models using the Colored Petri Nets {(CPN)} formalism. For this purpose, we also provide appropriate mappings from {OWL-based} ontological elements into {CPN} elements. A case study of a mortgage granting system is described, along with the potential benefits and limitations of our proposal.},
	number = {8},
	journal = {Science of Computer Programming},
	author = {Manuel Noguera and María V. Hurtado and María Luisa Rodríguez and Lawrence Chung and José Luis Garrido},
	month = aug,
	year = {2010},
	keywords = {Collaborative systems, {CPN,} {CSCW,} {OWL,} Process analysis, Process modelling, Reasoning, Task modelling},
	pages = {726--760}
},

@article{horrocks_reducing_2004,
	title = {Reducing {OWL} entailment to description logic satisfiability},
	volume = {1},
	issn = {1570-8268},
	url = {http://www.sciencedirect.com/science/article/B758F-4D1V7XT-2/2/5dbe34a780e5fe689b4827a674e802fb},
	doi = {10.1016/j.websem.2004.06.003},
	abstract = {We show how to reduce ontology entailment for the {OWL} {DL} and {OWL} Lite ontology languages to knowledge base satisfiability in (respectively) the and description logics. This is done by first establishing a correspondence between {OWL} ontologies and description logic knowledge bases and then by showing how knowledge base entailment can be reduced to knowledge base satisfiability.},
	number = {4},
	journal = {Web Semantics: Science, Services and Agents on the World Wide Web},
	author = {Ian Horrocks and Peter {Patel-Schneider}},
	month = oct,
	year = {2004},
	keywords = {Architecture, Description Logic, Knowledge, {OWL,} {OWL} Lite, {OWL-DL}},
	pages = {345--357}
},

@inproceedings{solms_technology_2007,
	address = {Amsterdam, The Netherlands, The Netherlands},
	title = {Technology Neutral Business Process Design using {URDAD}},
	isbn = {978-1-58603-794-9},
	booktitle = {Proceeding of the 2007 conference on New Trends in Software Methodologies, Tools and Techniques},
	publisher = {{IOS} Press},
	author = {Fritz Solms},
	year = {2007},
	pages = {52–70}
},

@inproceedings{samir_towards_2010,
	address = {Athens, Greece},
	title = {Towards a Structure for the Computation Independent Model},
	url = {http://www.enase.org/Abstracts/2010/ENASE_2010_Abstracts.htm},
	abstract = {Model Driven Architecture {(MDA)} is composed of a hierarchy of three levels of models : computation independent model {(CIM),} platform independent model {(PIM)} and platform specific model {(PSM).} Currently, there exists no formal {CIM} definition describing its structure of elements to which transformation rules can be applied. It is therefore the goal of this paper to attempt such a structure. In our view, the {CIM} can be divided into a hierarchy of three interconnected models: the business motivation model {(BMM),} the business process model {(BPM),} and the requirements model {(RM).} This paper presents how these three models can account for the {CIM} and how they are related to each other.},
	author = {Kherraf Samir and Alexandre Moïse and Éric Lefebvre and Witold Suryn},
	year = {2010},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- discuss structure of {CIM:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}* {CIM} = {BMM} + {RM} + {BPM}  {(Computation} Independent Model = Business Motivational Model + Requirements Model + Business Process Model){\textless}/p{\textgreater}
{\textless}p{\textgreater}* {BMM} = business strategies \&amp; tactics, policies \&amp; rules, goals \&amp; objectives{\textless}/p{\textgreater}
{\textless}p{\textgreater}* {RM} = use case  actor + business rule{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Claim {CIM} transforms to {PIM,} but with what additional inputs?{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Separation of {CIM} and {PIM} at best vague. {PIM} seen as refinement of {CIM} adding interfaces and perhaps class diagrams. {PIM} usually seen as platform independent software model, but even {CIM} is said by {OMG} to "show system in environment in which it will operate"???{\textless}/p{\textgreater}
{\textless}p{\textgreater}- {OMG} Requirements for {CIM} - make only partial sense{\textless}/p{\textgreater}
{\textless}p{\textgreater} {\textless}/p{\textgreater}}
},

@inproceedings{gervais_towards_????,
	address = {Oxford, {UK}},
	title = {Towards an {MDA-oriented} methodology},
	url = {http://0-ieeexplore.ieee.org.innopac.up.ac.za/xpl/downloadCitations},
	doi = {10.1109/CMPSAC.2002.1044561},
	booktitle = {Proceedings 26th Annual International Computer Software and Applications},
	author = {{M.P.} Gervais},
	keywords = {Design methodology, {MDA,} {ODAC,} {PIM} guidelines},
	pages = {265--270},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- defines {ODAC} methodology{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Defined view points{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Guidelines for {PIM{\textless}/p{\textgreater}}
{\textless}p{\textgreater} {\textless}/p{\textgreater}}
},

@article{hoffmann_towards_2009,
	title = {Towards the Integration of {UML-} and textual Use Case Modeling},
	volume = {8},
	issn = {1660-1769},
	url = {http://www.jot.fm/contents/issue_2009_05/article2.html},
	doi = {10.5381/jot.2009.8.3.a2},
	number = {3},
	journal = {Journal of Object Technology},
	author = {Veit Hoffmann and Horst Lichter and Alexander Nyßen and Andreas Walter},
	month = may,
	year = {2009},
	keywords = {Domain experts, {DSL,} {UML}},
	pages = {85--100},
	annote = {{{\textless}p{\textgreater}SUMMARY:{\textless}/p{\textgreater}}
{\textless}p{\textgreater}- Define separate metamodel for narrative use case description useful for business users (note this is not a textual syntax, but a separate metamodel){\textless}/p{\textgreater}
{\textless}p{\textgreater}- Define consistency checks between narrative and {UML} use case models.{\textless}/p{\textgreater}
{\textless}p{\textgreater}- Relevant as reference for {URDAD} text {DSL} for domain experts.{\textless}/p{\textgreater}
{\textless}p{\textgreater} {\textless}/p{\textgreater}}
},

@inproceedings{osis_transforming_2010,
	address = {Athens, Greece},
	title = {Transforming Textual Use Cases to a Computation Independent Model},
	url = {http://www.enase.org/Abstracts/2010/ENASE_2010_Abstracts.htm},
	abstract = {This paper analyzes the specific text analysis tasks of transforming textual use cases of a business system to a Computation Independent Model {(CIM)} for Model Driven Architecture {(MDA).} By applying language processing methods to textual use case analysis and using Topological Functioning Model {(TFM)} as {CIM} a workable solution can be developed. Implementing a {TFM} Tool is considered to enable fetching a {TFM} from use cases, editing and verifying the {TFM,} and transforming {TFM} to Unified Modeling Language {(UML).} Solution’s compatibility to {MDA} standards is also considered, thus increasing the completeness of {MDA} and providing a formal method to automatically acquire a {CIM} from description of a business system in form of textual use cases.},
	author = {Janis Osis and Armands Šlihte},
	year = {2010}
},

@article{solms_urdad_2010,
	title = {{URDAD} as a semi-formal approach to analysis and design},
	volume = {6},
	issn = {1614-5046},
	url = {http://dx.doi.org/10.1007/s11334-009-0113-4},
	abstract = {The Use Case, Responsibility Driven Analysis and Design {(URDAD)} methodology is a methodology for technology neutral design generating the Platform Independent Model of the Object Management Group’s Model Driven Architecture. It requires the core modeling to be done in the problem space by domain specialists and not in the solution space by technology specialists. {URDAD} allows for formal elements to be added by different role players at different stages of the model refinement, whilst aiming to preserve agility of the outputs and low cost of the process generating the outputs. This paper discusses the semi-formal aspects of {URDAD} which facilitate model validation and testing, documentation generation and automated implementation mapping as well as aspects which promote agility and low cost.},
	journal = {Innovations in Systems and Software Engineering},
	author = {Fritz Solms and Dawid Loubser},
	year = {2010},
	note = {10.1007/s11334-009-0113-4},
	pages = {155--162}
},

@article{parreiras_using_2010,
	title = {Using ontologies with {UML} class-based modeling: The {TwoUse} approach},
	volume = {69},
	issn = {{0169-023X}},
	shorttitle = {Using ontologies with {UML} class-based modeling},
	url = {http://www.sciencedirect.com/science/article/B6TYX-50J4M6X-5/2/0af833bc0750a5efddf70c0696a4fe5c},
	doi = {10.1016/j.datak.2010.07.009},
	abstract = {{UML} class-based models and {OWL} ontologies constitute modeling approaches with different strengths and weaknesses that make them appropriate for specifying distinct aspects of software systems. We propose an integrated use of both modeling approaches in a coherent framework -- {TwoUse.} We present a framework involving different concrete syntaxes for developing integrated models and use a {SPARQL-like} approach for writing query operations. We illustrate {TwoUse's} applicability with a case study and conclude that {TwoUse} achieves enhancements of non-functional software requirements like maintainability, reusability and extensibility.},
	number = {11},
	journal = {Data \& Knowledge Engineering},
	author = {Fernando Silva Parreiras and Steffen Staab},
	month = nov,
	year = {2010},
	keywords = {{CASE} tools + {UML,} consistency checking, Ecore, Language definition, Manipulation, metamodel, Ontologies, {OWL,} {OWL-DL,} twouse},
	pages = {1194--1207}
}