<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="urdad"
    nsURI="http://www.urdad.org/2010/urdad" nsPrefix="urdad">
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="author" value="fritz@solms.co.za"/>
  </eAnnotations>
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="documentation" value="This is a ecore encoding of the URDAD meta-model. URDAD is a services-oriented&#xA;&#x9; analysis and design methodology which is meant for technology neutral analysis&#xA;&#x9; and design resulting in a PIM (platform-independent model) which can be used &#xA;&#x9; in the context of model-driven development (e.g. MDA)."/>
  </eAnnotations>
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="todo" value="Componentize meta-model"/>
  </eAnnotations>
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="todo" value="How to support componentized models?"/>
  </eAnnotations>
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="todo" value="Should primitives be sourced from OCL?"/>
  </eAnnotations>
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="todo" value="Should awaiting on signals be supported and if so, how?"/>
  </eAnnotations>
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="todo" value="Persistence &amp; CRUD methods via entity manager. Problem: these are in model, not meta-model domain"/>
  </eAnnotations>
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="todo" value="Basic data types"/>
  </eAnnotations>
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="todo" value="Exception message construction perhaps via OCL to include context info"/>
  </eAnnotations>
  <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
    <details key="todo" value="Fully qualified names support in XText (it is in ECore, but not in default XText mapping - can be done in XText)"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Role" eSuperTypes="#//NamedElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="Element" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotations" upperBound="-1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EAnnotation" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true" eSuperTypes="#//Element">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResponsibilityDomain" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="elements" upperBound="-1"
        eType="#//Element" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Expression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="expressionString" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanExpression" eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="Constraint" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraintExpression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MultiplicityConstraint" abstract="true"
      eSuperTypes="#//Element"/>
  <eClassifiers xsi:type="ecore:EClass" name="RangeMultiplicityConstraint" eSuperTypes="#//MultiplicityConstraint">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="minOccurs" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBigInteger"
        defaultValueLiteral="1"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxOccurs" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBigInteger"
        defaultValueLiteral="1"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DataType" abstract="true" eSuperTypes="#//NamedElement"/>
  <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="BasicDataType"/>
  <eClassifiers xsi:type="ecore:EClass" name="BasicDataType" eSuperTypes="#//DataType"/>
  <eClassifiers xsi:type="ecore:EClass" name="DataStructure" eSuperTypes="#//DataType">
    <eStructuralFeatures xsi:type="ecore:EReference" name="superType" eType="#//DataStructure"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributes" upperBound="-1"
        eType="#//Attribute" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="associations" upperBound="-1"
        eType="#//Association" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Exception" eSuperTypes="#//DataStructure"/>
  <eClassifiers xsi:type="ecore:EClass" name="Attribute" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//BasicDataType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Association" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedType" lowerBound="1"
        eType="#//DataStructure"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="multiplicityConstraint"
        eType="#//MultiplicityConstraint" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Aggregation" eSuperTypes="#//Association"/>
  <eClassifiers xsi:type="ecore:EClass" name="Composition" eSuperTypes="#//Aggregation"/>
  <eClassifiers xsi:type="ecore:EClass" name="Requirement" abstract="true" eSuperTypes="#//Constraint">
    <eStructuralFeatures xsi:type="ecore:EReference" name="requiredBy" upperBound="-1"
        eType="#//Role"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FunctionalRequirement" abstract="true"
      eSuperTypes="#//Requirement">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="documentation" value="A functional requirement is a requirement for some functionality. This includes the functionality to be able to assess some &#xA;&#x9;&#x9;precondition, the functionality which ensures that some post-condition holds true after a service has been provided or the&#xA;&#x9;&#x9;functionality of the service as a whole."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="requiredService" lowerBound="1"
        eType="#//Service"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="QualityRequirement" eSuperTypes="#//Requirement">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="documentation" value="A quality requirement is a non-functional requirement around quality of service. &#xA;&#x9;&#x9;Typical examples of quality requirements include scalability, reliability, performance, security and auditability."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PreCondition" eSuperTypes="#//FunctionalRequirement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="exception" lowerBound="1"
        eType="#//Exception"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PostCondition" eSuperTypes="#//FunctionalRequirement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="inverseService" eType="#//Service"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Service" eSuperTypes="#//Role">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="documentation" value="A requirement for a service."/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="documentation" value="Pre and post-conditions composed in service because constraint definitions are context specific"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="request" lowerBound="1"
        eType="#//DataStructure" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="result" eType="#//DataStructure"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="preConditions" upperBound="-1"
        eType="#//PreCondition" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="postConditions" upperBound="-1"
        eType="#//PostCondition" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="qualityRequirements" upperBound="-1"
        eType="#//QualityRequirement"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Activity" abstract="true" eSuperTypes="#//Element"/>
  <eClassifiers xsi:type="ecore:EClass" name="Process" eSuperTypes="#//Activity">
    <eStructuralFeatures xsi:type="ecore:EReference" name="serviceRealized" lowerBound="1"
        eType="#//Service"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="processActivity" lowerBound="1"
        eType="#//Activity" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BackgroundActivity" eSuperTypes="#//Activity">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="documentation" value="A sequence of activities which does not hold up the process. This element is meant to be used in the context of IndependentActivities (concurrencies) for a background thread which does not lead into the implied synchronization bar at the end of the concurrent activities."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ActivitySequence" eSuperTypes="#//Activity">
    <eStructuralFeatures xsi:type="ecore:EReference" name="activities" upperBound="-1"
        eType="#//Activity" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConcurrentActivities" eSuperTypes="#//Activity">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="documentation" value="A collection of activities which are independent of one another and which can be performed concurrently. The end of this element implies a synchronization bar which blocks the process until all non-BackgroundThreads have been completed."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="activities" upperBound="-1"
        eType="#//Activity" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Switch" eSuperTypes="#//Activity">
    <eStructuralFeatures xsi:type="ecore:EReference" name="conditionalActivities"
        upperBound="-1" eType="#//ConditionalActivity" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="While" eSuperTypes="#//ConditionalActivity"/>
  <eClassifiers xsi:type="ecore:EClass" name="ConditionalActivity" eSuperTypes="#//Activity">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
        eType="#//BooleanExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="activity" lowerBound="1"
        eType="#//Activity" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ServiceRequestActivity" abstract="true"
      eSuperTypes="#//Activity">
    <eStructuralFeatures xsi:type="ecore:EReference" name="requestContraints" upperBound="-1"
        eType="#//Constraint" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PreConditionActivity" eSuperTypes="#//ServiceRequestActivity">
    <eStructuralFeatures xsi:type="ecore:EReference" name="preCondition" lowerBound="1"
        eType="#//PreCondition"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="exceptionContraints" upperBound="-1"
        eType="#//Constraint" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PostConditionActivity" eSuperTypes="#//ServiceRequestActivity">
    <eStructuralFeatures xsi:type="ecore:EReference" name="postCondition" lowerBound="1"
        eType="#//PostCondition"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="inverseRequestContraints"
        upperBound="-1" eType="#//Constraint" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PrePostConditionActivity" eSuperTypes="#//PreConditionActivity #//PostConditionActivity"/>
  <eClassifiers xsi:type="ecore:EClass" name="ReturnResultActivity" eSuperTypes="#//Activity">
    <eStructuralFeatures xsi:type="ecore:EReference" name="resultContraints" upperBound="-1"
        eType="#//Constraint" containment="true"/>
  </eClassifiers>
</ecore:EPackage>
